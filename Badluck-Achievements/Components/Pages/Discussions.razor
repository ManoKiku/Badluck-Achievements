@page "/discussions"
@using Badluck_Achievements.Components.Data
@using Badluck_Achievements.Components.Models
@inject AppDbContext DbContext
@rendermode InteractiveServer

<PageTitle>Badluck Achievements - Discussions</PageTitle>

<div class="container">
	<div class="add-discussion">
		<div class="discussion-form" onsubmit="return false;">
			<input type="text" placeholder="Title" required @bind="title">
			<textarea placeholder="Description (max 1000 symbols)" maxlength="1000" required @bind="description"></textarea>
			<div class="char-counter"><span id="charCount">0</span>/1000</div>
			<button class="submit-btn" @onclick="CreateDiscussion">Create discussion</button>
		</div>
	</div>

	<div class="discussions-list">
		@foreach(var discussion in discussions)
		{
			<div class="discussion-item">
				<img class="discussion-avatar" src="@discussion.Author.IconPath" alt="Avatar" />
				<div class="discussion-author">@discussion.Author.Username</div>
				<div class="discussion-title">@discussion.Title</div>
				<div class="discussion-content">@discussion.Content.Substring(0, Math.Min(150, discussion.Content.Length))...</div>
			</div>
		}
	</div>

	<div class="pagination">
		@for (int i = 0; i < (int)Math.Ceiling(discussions.Count / 5.0); ++i)
		{
			<div class="page-number@(i + 1 == page ? "active" : string.Empty)">@(i + 1)</div>
		}
	</div>
</div>

@code {
	[CascadingParameter]
	public Sesion? sesion { get; set; }

	private List<Discussion> discussions = new List<Discussion>();
	private List<Discussion> toShow = new List<Discussion>();
	private int page = 1;
	private int maxPage = 1;

	private string title { get; set; }
	private string description { get; set; }


	protected override void OnInitialized()
	{
		discussions = DbContext.Discussions.ToList();
		List<Discussion[]> pages = new List<Discussion[]>();

		maxPage = (int)Math.Ceiling(discussions.Count / 5.0);

		if (maxPage == 0)
			maxPage = 1;

		if (page <= 0)
			page = 1;
		else if (page > maxPage)
			page = maxPage;

		if (discussions.Count != 0)
			toShow = discussions.Chunk(5).ElementAt(page - 1).ToList();
	}

	private void ChangePage(int newPage)
	{
		if (newPage > maxPage)
			newPage = maxPage;

		page = newPage;

		if (discussions != null)
			toShow = discussions.Chunk(5).ElementAt(page - 1).ToList();
	}

	private void CreateDiscussion(MouseEventArgs args)
	{
		var steamId = Convert.ToUInt64(sesion.SteamId);

		Console.WriteLine(steamId);

		var author = DbContext.Users.FirstOrDefault(x => x.SteamId == steamId);

		Console.WriteLine(steamId);

		if (author == null)
			return;

		DbContext.Discussions.Add(new Discussion
        {
            AuthorId = author.UserId,
            Content = description,
            Title = title
        });
		DbContext.SaveChanges();
	}
}
